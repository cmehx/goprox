services:
  goprox:
    container_name: goprox
    build: .
    ports:
      - "8180:8180"
    env_file:
      - .env
    volumes:
      - ./cmd:/app/cmd
      - ./internal:/app/internal
      - ./pkg:/app/pkg
      - ./go.mod:/app/go.mod
      - ./go.sum:/app/go.sum
    environment:
      - PROXY_TARGET=http://example.com  # Remplace par l'URL de ton proxy
    command: ["air", "-c", ".air.toml"]  # Utiliser Air pour le live reload
    working_dir: /app
    restart: on-failure
    depends_on:
      - goprox-db  # Si tu ajoutes une base de données plus tard

  # Optionnel : Base de données PostgreSQL
  goprox-db:
    image: postgres:13-alpine
    container_name: goprox-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: goprox
    volumes:
      - goprox-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    image: python:3.12-alpine
    container_name: goprox-backend
    working_dir: /app
    command: python -m http.server 9000 --bind 0.0.0.0
    ports:
      - "9000:9000"
    networks:
      - default

volumes:
  goprox-db-data:
